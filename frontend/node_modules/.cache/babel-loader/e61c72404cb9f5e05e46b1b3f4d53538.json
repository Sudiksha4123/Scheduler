{"ast":null,"code":"import _slicedToArray from \"/home/benu/test_calendar/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport 'smart-webcomponents-react/source/styles/smart.default.css';\nimport axios from 'axios';\nimport swal from 'sweetalert2';\nexport function createField(labelText, inputElement) {\n  var fieldContainer = document.createElement('div');\n  fieldContainer.classList.add('field-container');\n  var label = document.createElement('label');\n  label.innerText = labelText;\n  fieldContainer.appendChild(label);\n  fieldContainer.appendChild(inputElement);\n  return fieldContainer;\n}\nexport function createInputField(value, onChange) {\n  var input = document.createElement('input');\n  input.type = 'text';\n  input.value = value;\n  input.addEventListener('change', onChange);\n  return input;\n}\nexport function createDateField(value, onChange) {\n  var input = document.createElement('input');\n  input.type = 'date';\n  input.value = value;\n  input.addEventListener('change', onChange);\n  return input;\n}\nexport function createTextAreaField(value, onChange) {\n  var textarea = document.createElement('textarea');\n  textarea.value = value;\n  textarea.addEventListener('change', onChange);\n  return textarea;\n}\nexport function createTimeField(value, onChange) {\n  var input = document.createElement('input');\n  input.type = 'time';\n  input.value = value;\n  input.addEventListener('change', onChange);\n  return input;\n}\nexport function formatTime(date) {\n  var timeString = date.toTimeString().slice(0, 5); // Get the time part as \"HH:mm\" format\n  var _timeString$split = timeString.split(':'),\n    _timeString$split2 = _slicedToArray(_timeString$split, 2),\n    hours = _timeString$split2[0],\n    minutes = _timeString$split2[1];\n  var timeDate = new Date();\n  timeDate.setHours(Number(hours), Number(minutes));\n  return timeDate;\n}\nexport function submitEvent(eventData, scheduler) {\n  // Add code here to submit the eventData to the backend\n  // For example, you can use axios to make an HTTP POST request to the backend API\n  axios.post('/event/api/events', eventData).then(function (response) {\n    // Handle the response from the backend if needed\n    swal.fire('Success', 'Event has been submitted.', 'success');\n    scheduler.closeWindow(); // Close the custom window after successful submission\n\n    if (newEvent) {\n      scheduler.dataSource.push(eventData);\n    }\n  }).catch(function (error) {\n    // Handle any errors that occur during the HTTP request\n    swal.fire('Error', 'Failed to submit event.', 'error');\n  });\n}","map":{"version":3,"names":["axios","swal","createField","labelText","inputElement","fieldContainer","document","createElement","classList","add","label","innerText","appendChild","createInputField","value","onChange","input","type","addEventListener","createDateField","createTextAreaField","textarea","createTimeField","formatTime","date","timeString","toTimeString","slice","_timeString$split","split","_timeString$split2","_slicedToArray","hours","minutes","timeDate","Date","setHours","Number","submitEvent","eventData","scheduler","post","then","response","fire","closeWindow","newEvent","dataSource","push","catch","error"],"sources":["/home/benu/test_calendar/frontend/src/newEvent.js"],"sourcesContent":["import 'smart-webcomponents-react/source/styles/smart.default.css';\nimport axios from 'axios';\nimport swal from 'sweetalert2';\n\nexport function createField(labelText, inputElement) {\n\tconst fieldContainer = document.createElement('div');\n\tfieldContainer.classList.add('field-container');\n  \n\tconst label = document.createElement('label');\n\tlabel.innerText = labelText;\n\tfieldContainer.appendChild(label);\n  \n\tfieldContainer.appendChild(inputElement);\n  \n\treturn fieldContainer;\n  }\n  \n  export function createInputField(value, onChange) {\n\tconst input = document.createElement('input');\n\tinput.type = 'text';\n\tinput.value = value;\n\tinput.addEventListener('change', onChange);\n  \n\treturn input;\n  }\n\n  export function createDateField(value, onChange) {\n\tconst input = document.createElement('input');\n\tinput.type = 'date';\n\tinput.value = value;\n\tinput.addEventListener('change', onChange);\n  \n\treturn input;\n  }\n  \n  export function createTextAreaField(value, onChange) {\n\tconst textarea = document.createElement('textarea');\n\ttextarea.value = value;\n\ttextarea.addEventListener('change', onChange);\n  \n\treturn textarea;\n  }\n  \n  export function createTimeField(value, onChange) {\n\tconst input = document.createElement('input');\n\tinput.type = 'time';\n\tinput.value = value;\n\tinput.addEventListener('change', onChange);\n  \n\treturn input;\n  }\n  \n  export function formatTime(date) {\n\tconst timeString = date.toTimeString().slice(0, 5); // Get the time part as \"HH:mm\" format\n\tconst [hours, minutes] = timeString.split(':');\n\tconst timeDate = new Date();\n\ttimeDate.setHours(Number(hours), Number(minutes));\n\treturn timeDate;\n  } \n\n  export function submitEvent(eventData, scheduler) {\n\t// Add code here to submit the eventData to the backend\n\t// For example, you can use axios to make an HTTP POST request to the backend API\n\taxios.post('/event/api/events', eventData)\n\t  .then(response => {\n\t\t// Handle the response from the backend if needed\n\t\tswal.fire('Success', 'Event has been submitted.', 'success');\n\t\tscheduler.closeWindow(); // Close the custom window after successful submission\n\n\t\tif (newEvent) {\n\t\t\tscheduler.dataSource.push(eventData);\n\t\t  }\n\t  })\n\t  .catch(error => {\n\t\t// Handle any errors that occur during the HTTP request\n\t\tswal.fire('Error', 'Failed to submit event.', 'error');\n\t  });\n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}